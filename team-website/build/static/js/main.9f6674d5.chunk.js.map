{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","href","data-href","data-tabs","data-small-header","data-adapt-container-width","data-hide-cover","data-show-facepile","cite","bgcolor","width","align","src","height","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6KCgJzBC,gMA1IX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACdH,EAAAC,EAAAC,cAAA,+CACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,0CAAT,oBACJJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,kEAAT,kBAERJ,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,yFAAyFJ,EAAAC,EAAAC,cAAA,iCACtGF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,qIAAT,4BACJJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,uCAAT,iCAGRJ,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,cAAYC,UAAU,wBAClBH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,2DAAR,iBAEJJ,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUE,YAAU,iDAAiDC,YAAU,WACzFC,oBAAkB,OAAOC,6BAA2B,OAAOC,kBAAgB,OAC3EC,qBAAmB,QACpBV,EAAAC,EAAAC,cAAA,cAAYS,KAAK,iDAAiDR,UAAU,yBAAwBH,EAAAC,EAAAC,cAAA,KAChGE,KAAK,kDAD2F,6BAGxGJ,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIU,QAAQ,UAAUT,UAAU,SAC5BH,EAAAC,EAAAC,cAAA,MAAIW,MAAM,KAAKD,QAAQ,WACnBZ,EAAAC,EAAAC,cAAA,OAAKY,MAAM,UAASd,EAAAC,EAAAC,cAAA,mCAExBF,EAAAC,EAAAC,cAAA,MAAIW,MAAM,KAAKD,QAAQ,WACnBZ,EAAAC,EAAAC,cAAA,OAAKY,MAAM,UAASd,EAAAC,EAAAC,cAAA,4BAG5BF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,kCAIZF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,+CAGRF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,+EACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,+CAAT,6CACJJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,+CAAT,0CAIhBJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kCAEJF,EAAAC,EAAAC,cAAA,OACIa,IAAK,qIACLC,OAAQ,WAGhBhB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,kGAAT,mBAIhBJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,+BAGRF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,kGAAT,iBAERJ,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,8GACAF,EAAAC,EAAAC,cAAA,oEAEJF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,qDAAT,uBACJJ,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,4CAAT,iDACJJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,yCAAT,YACJJ,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,sCAAT,8BACJJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,iEAAT,kCAlIZa,cCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxB,EAAAC,EAAAC,cAACuB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9f6674d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={\"App\"}>\n        <h1>PCT Tech Team Spring 2019 Website</h1>\n          <h4>Resources</h4>\n          <ul>\n              <li><a href={'https://github.com/phichithetatechteam'}>Team Repository</a></li>\n              <li><a href={'https://drive.google.com/drive/u/0/folders/0AN-dML6F20W8Uk9PVA'}>Google Drive</a></li>\n          </ul>\n          <h4>Interview Prep</h4>\n          <ul>\n              <li><a href={'https://www.icloud.com/iclouddrive/0_Vu4YtAcL5h2or_I1wfGH6LQ#Technical_Interview_Prep'}><strong>Download this</strong></a></li>\n              <li><a href={'https://docs.google.com/spreadsheets/d/1qXRpoyjYsu7vRAEcyuFDql0GLh8DcCCQyZP83AF4a9M/edit?usp=drive_web&ouid=117691964584408091937'}>Chirag Company Contacts</a></li>\n              <li><a href={'https://www.algoexpert.io/questions'}>Pre-paid Algorithm Practice</a></li>\n          </ul>\n\n          <h4>Team</h4>\n          <ul>\n              <li>Chirag Aswani</li>\n              <li>Jason Cho</li>\n              <li>Tyler Donati</li>\n              <li>Jin-Young Bang</li>\n              <li>Ji Weiqi</li>\n              <li>Jennifer Roh</li>\n              <li>Randy Richardson</li>\n              <li>Justin Ching</li>\n          </ul>\n          <h4>Trello Board</h4>\n          <blockquote className=\"trello-board-compact\">\n              <a href=\"https://trello.com/b/OojRjvjP/pct-tech-team-spring-2019\">Trello Board</a>\n          </blockquote>\n          <h4>Upcoming Events</h4>\n          <div className=\"fb-page\" data-href=\"https://www.facebook.com/computersciencevents/\" data-tabs=\"timeline\"\n               data-small-header=\"true\" data-adapt-container-width=\"true\" data-hide-cover=\"true\"\n               data-show-facepile=\"true\">\n              <blockquote cite=\"https://www.facebook.com/computersciencevents/\" className=\"fb-xfbml-parse-ignore\"><a\n                  href=\"https://www.facebook.com/computersciencevents/\">Computer Science Events</a></blockquote>\n          </div>\n          <h2>The Fun Stuff!</h2>\n          <table>\n              <tr bgcolor=\"#0000ff\" className=\"White\">\n                  <td width=\"3%\" bgcolor=\"#0066FF\">\n                      <div align=\"center\"><strong>Meeting Agenda </strong></div>\n                  </td>\n                  <td width=\"7%\" bgcolor=\"#0066FF\">\n                      <div align=\"center\"><b>Homework Due</b></div>\n                  </td>\n              </tr>\n              <tr>\n                  <td>\n                      <h4>Meeting #1</h4>\n                      <ul>\n                          <li>Introduction to GitHub</li>\n                          <li>Project Proposals</li>\n                      </ul>\n                  </td>\n              </tr>\n              <tr>\n                  <td>\n                      <h4>Meeting #2 @8:00pm CAS</h4>\n                      <ul>\n                          <li>Decide on what project to build</li>\n                      </ul>\n                  </td>\n                  <td>\n                      <h4>Identify problems that need to be solved!</h4>\n                      <p>Examples</p>\n                      <ul>\n                          <li>Why does it take me 8 alarms to wake up?</li>\n                          <li>Why is the BU shuttle never accurate</li>\n                          <li>Ugh! I can't find the right song to play</li>\n                          <li>etc...</li>\n                      </ul>\n                      <p>How to go about this process</p>\n                      <ul>\n                          <li>My recommendation is to write down everything that frustrates you</li>\n                          <li><a href={'https://www.youtube.com/watch?v=9ArIwn4yImY'}>How do you find a problem worth solving?</a></li>\n                          <li><a href={'https://www.youtube.com/watch?v=xXMQGBhaync'}>How to Identify and Solve Problems</a></li>\n                      </ul>\n                  </td>\n              </tr>\n              <tr>\n                  <td>\n                      <h4>Meeting #3 @TBD</h4>\n                      <ul>\n                          <li>Discussing Features</li>\n                      </ul>\n                      <img\n                          src={\"https://github.com/ChiragAswani/PCT-Tech-Team-Spring-2019/blob/master/team-website/src/images/02-05-19_meeting_notes.jpeg?raw=true\"}\n                          height={\"200px\"}\n                      />\n                  </td>\n                  <td>\n                      <h3>Endorse each other on LinkedIn</h3>\n                      <ul>\n                          <li>Make sure you list your top 3 skills!</li>\n                          <li><a href={'https://docs.google.com/spreadsheets/d/1X9DPN7wy8BF5EiRIBQU3_6nnaNbWTbzg_LmtF_RMeTg/edit#gid=0'}>Spreadsheet</a></li>\n                      </ul>\n                  </td>\n              </tr>\n              <tr>\n                  <td>\n                      <h4>Meeting #4 @Tuesday Feb 12, 2019</h4>\n                      <ul>\n                          <li>Learning Flask</li>\n                          <li>Learning Python Virtual Enviornments</li>\n                          <li>Learning what an API is (it maps a URL to a function)</li>\n                          <li>Learning GitHub</li>\n                      </ul>\n                  </td>\n                  <td>\n                      <h3>Endorse each other on LinkedIn</h3>\n                      <ul>\n                          <li>Make sure you list your top 3 skills!</li>\n                          <li><a href={'https://docs.google.com/spreadsheets/d/1X9DPN7wy8BF5EiRIBQU3_6nnaNbWTbzg_LmtF_RMeTg/edit#gid=0'}>Spreadsheet</a></li>\n                      </ul>\n                      <h3>Finish Tasks Listed as \"In Progress\" in Trello</h3>\n                      <ul>\n                          <li>In the Trello Board, click \"Show Menu\" -> click \"Filter Cards\" -> Scroll Down -> click your name</li>\n                          <li>You will see all the tasks or \"cards\" assigned to you</li>\n                      </ul>\n                      <h3>Install these...</h3>\n                      <ul>\n                          <li><a href={'https://www.youtube.com/watch?v=DX15WbKidXY&vl=en'}>1. Install MongoDB</a></li>\n                          <li>2. On terminal, run `mongod` (no `)</li>\n                          <li><a href={'https://www.mongodb.com/products/compass'}>3. Install MongoDB Compass and press connect</a></li>\n                          <li><a href={'https://www.getpostman.com/downloads/'}>Postman</a></li>\n                          <li>Python</li>\n                          <li><a href={'https://www.jetbrains.com/student/'}>Pycharm - Student Edition</a></li>\n                          <li><a href={'https://git-scm.com/book/en/v2/Getting-Started-Installing-Git'}>Git Command Tools</a></li>\n                      </ul>\n                  </td>\n              </tr>\n          </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}